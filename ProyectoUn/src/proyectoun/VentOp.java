//Geometria
package proyectoun;

import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import libCalculos.cAritmetico;
import libCalculos.cEcuaciones;
import libCalculos.cFiguras;
public class VentOp extends javax.swing.JFrame {
    cEcuaciones ec= new cEcuaciones();
    cAritmetico raizS= new cAritmetico();
    cFiguras figural= new cFiguras();
    ImageIcon imagen;
    public VentOp() {
        
        
        initComponents();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jMenu3 = new javax.swing.JMenu();
        jMenu1 = new javax.swing.JMenu();
        tpnOpciones = new javax.swing.JTabbedPane();
        Geometria = new javax.swing.JPanel();
        comboFiguras = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        comboCuerpo = new javax.swing.JComboBox<>();
        lblD1 = new javax.swing.JLabel();
        lblD2 = new javax.swing.JLabel();
        lblD3 = new javax.swing.JLabel();
        txfD1 = new javax.swing.JTextField();
        txfD3 = new javax.swing.JTextField();
        txfD2 = new javax.swing.JTextField();
        lblR1 = new javax.swing.JLabel();
        lblDU4 = new javax.swing.JLabel();
        lblPer = new javax.swing.JLabel();
        lblArea = new javax.swing.JLabel();
        lblDI4 = new javax.swing.JLabel();
        btnCalcularA = new javax.swing.JButton();
        lblD4 = new javax.swing.JLabel();
        txfD4 = new javax.swing.JTextField();
        lblR2 = new javax.swing.JLabel();
        lblImagen = new javax.swing.JLabel();
        lblDU1 = new javax.swing.JLabel();
        lblDU2 = new javax.swing.JLabel();
        lblDU3 = new javax.swing.JLabel();
        lblDI1 = new javax.swing.JLabel();
        lblDI2 = new javax.swing.JLabel();
        lblDI3 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        Algebra = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txfAPG = new javax.swing.JTextField();
        txfBPG = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        btnCPG = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        lblXPG = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txfBSG = new javax.swing.JTextField();
        txfCSG = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        btnCSG = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        lblX1SG = new javax.swing.JLabel();
        txfASG = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        lblX2SG = new javax.swing.JLabel();
        lblEcPG = new javax.swing.JLabel();
        lblEcSG = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        jMenu3.setText("jMenu3");

        jMenu1.setText("jMenu1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SalvaEstudiantes");
        setBackground(new java.awt.Color(153, 153, 153));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        tpnOpciones.setBackground(new java.awt.Color(153, 255, 255));
        tpnOpciones.setForeground(new java.awt.Color(159, 0, 219));
        tpnOpciones.setFont(new java.awt.Font("Dubai", 3, 14)); // NOI18N

        Geometria.setBackground(new java.awt.Color(116, 13, 206));

        comboFiguras.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Círculo", "Triángulo", "Cuadrado", "Rectángulo", "Polígono" }));
        comboFiguras.setToolTipText("");
        comboFiguras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboFigurasActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Figura:");

        jLabel2.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Cuerpo:");

        comboCuerpo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Plano", "Prisma", "Pirámide", "Esfera" }));
        comboCuerpo.setSelectedItem("Plano");
        comboCuerpo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboCuerpoActionPerformed(evt);
            }
        });

        lblD1.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        lblD1.setForeground(new java.awt.Color(255, 255, 255));
        lblD1.setText("Largo:");

        lblD2.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        lblD2.setForeground(new java.awt.Color(255, 255, 255));
        lblD2.setText("Ancho:");

        lblD3.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        lblD3.setForeground(new java.awt.Color(255, 255, 255));
        lblD3.setText("Altura:");

        txfD1.setFont(new java.awt.Font("Rockwell", 1, 14)); // NOI18N
        txfD1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfD1ActionPerformed(evt);
            }
        });

        txfD3.setFont(new java.awt.Font("Rockwell", 1, 14)); // NOI18N
        txfD3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfD3ActionPerformed(evt);
            }
        });

        txfD2.setFont(new java.awt.Font("Rockwell", 1, 14)); // NOI18N
        txfD2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfD2ActionPerformed(evt);
            }
        });

        lblR1.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 15)); // NOI18N
        lblR1.setForeground(new java.awt.Color(204, 255, 255));
        lblR1.setText("Perímetro:");

        lblDU4.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 15)); // NOI18N
        lblDU4.setForeground(new java.awt.Color(204, 255, 255));
        lblDU4.setText("Altura (H):");

        lblPer.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 14)); // NOI18N
        lblPer.setForeground(new java.awt.Color(204, 255, 204));

        lblArea.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 14)); // NOI18N
        lblArea.setForeground(new java.awt.Color(204, 255, 204));

        lblDI4.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 14)); // NOI18N
        lblDI4.setForeground(new java.awt.Color(204, 255, 204));

        btnCalcularA.setBackground(new java.awt.Color(180, 255, 255));
        btnCalcularA.setFont(new java.awt.Font("Gill Sans MT", 1, 16)); // NOI18N
        btnCalcularA.setForeground(new java.awt.Color(51, 51, 51));
        btnCalcularA.setText("CALCULAR");
        btnCalcularA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalcularAActionPerformed(evt);
            }
        });

        lblD4.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        lblD4.setForeground(new java.awt.Color(255, 255, 255));
        lblD4.setText("Lado:");

        txfD4.setFont(new java.awt.Font("Rockwell", 1, 14)); // NOI18N
        txfD4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfD4ActionPerformed(evt);
            }
        });

        lblR2.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 15)); // NOI18N
        lblR2.setForeground(new java.awt.Color(204, 255, 255));
        lblR2.setText("Área:");

        lblDU1.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 15)); // NOI18N
        lblDU1.setForeground(new java.awt.Color(204, 255, 255));
        lblDU1.setText("Radio:");

        lblDU2.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 15)); // NOI18N
        lblDU2.setForeground(new java.awt.Color(204, 255, 255));
        lblDU2.setText("Altura:");

        lblDU3.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 15)); // NOI18N
        lblDU3.setForeground(new java.awt.Color(204, 255, 255));
        lblDU3.setText("Apotema:");

        lblDI1.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 14)); // NOI18N
        lblDI1.setForeground(new java.awt.Color(204, 255, 204));

        lblDI2.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 14)); // NOI18N
        lblDI2.setForeground(new java.awt.Color(204, 255, 204));

        lblDI3.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 14)); // NOI18N
        lblDI3.setForeground(new java.awt.Color(204, 255, 204));

        jLabel3.setFont(new java.awt.Font("Britannic Bold", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 204, 204));
        jLabel3.setText("Resultados");

        jLabel4.setFont(new java.awt.Font("Cooper Black", 0, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 212, 13));
        jLabel4.setText("GEOMETRÍA");

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout GeometriaLayout = new javax.swing.GroupLayout(Geometria);
        Geometria.setLayout(GeometriaLayout);
        GeometriaLayout.setHorizontalGroup(
            GeometriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GeometriaLayout.createSequentialGroup()
                .addGroup(GeometriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(GeometriaLayout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(lblImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(GeometriaLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(GeometriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(GeometriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboCuerpo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboFiguras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(GeometriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(GeometriaLayout.createSequentialGroup()
                        .addGroup(GeometriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblD1)
                            .addComponent(lblD2)
                            .addComponent(lblD4)
                            .addComponent(lblD3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(GeometriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txfD2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txfD1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txfD3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txfD4, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(GeometriaLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(GeometriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(GeometriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(GeometriaLayout.createSequentialGroup()
                                    .addComponent(lblDU4)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(lblDI4, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(GeometriaLayout.createSequentialGroup()
                                    .addGroup(GeometriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(lblDU1)
                                        .addComponent(lblDU2)
                                        .addComponent(lblDU3))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(GeometriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(GeometriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(lblDI2, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                                            .addComponent(lblDI3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addComponent(lblDI1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(GeometriaLayout.createSequentialGroup()
                                .addGroup(GeometriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblR1)
                                    .addComponent(lblR2))
                                .addGap(12, 12, 12)
                                .addGroup(GeometriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblPer, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                                    .addComponent(lblArea, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(GeometriaLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(GeometriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(btnCalcularA))))
                .addGap(28, 28, 28))
            .addGroup(GeometriaLayout.createSequentialGroup()
                .addGap(206, 206, 206)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        GeometriaLayout.setVerticalGroup(
            GeometriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GeometriaLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(GeometriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(GeometriaLayout.createSequentialGroup()
                        .addGroup(GeometriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(comboFiguras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(lblD1)
                            .addComponent(txfD1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addGroup(GeometriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(GeometriaLayout.createSequentialGroup()
                                .addGroup(GeometriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblD2)
                                    .addComponent(txfD2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(GeometriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblD3)
                                    .addComponent(txfD3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(8, 8, 8)
                                .addGroup(GeometriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblD4)
                                    .addComponent(txfD4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(btnCalcularA)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3)
                                .addGap(19, 19, 19)
                                .addGroup(GeometriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblPer, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblR1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(GeometriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblR2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblArea, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(GeometriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(GeometriaLayout.createSequentialGroup()
                                        .addComponent(lblDI1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(3, 3, 3))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, GeometriaLayout.createSequentialGroup()
                                        .addComponent(lblDU1)
                                        .addGap(6, 6, 6))))
                            .addGroup(GeometriaLayout.createSequentialGroup()
                                .addGroup(GeometriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(comboCuerpo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addGap(26, 26, 26)
                                .addComponent(lblImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(12, 12, 12)
                        .addGroup(GeometriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblDI2, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDU2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(GeometriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDU3)
                            .addComponent(lblDI3, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(GeometriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDU4)
                            .addComponent(lblDI4, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jSeparator2))
                .addContainerGap())
        );

        tpnOpciones.addTab("Geometria", Geometria);

        Algebra.setBackground(new java.awt.Color(102, 0, 153));

        jLabel5.setFont(new java.awt.Font("Cooper Black", 0, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 212, 13));
        jLabel5.setText("ÁLGEBRA");

        jLabel6.setFont(new java.awt.Font("Britannic Bold", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 204, 204));
        jLabel6.setText("Ecuación de Primer grado");

        jLabel7.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("x  +");

        txfAPG.setFont(new java.awt.Font("Rockwell", 1, 14)); // NOI18N
        txfAPG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfAPGActionPerformed(evt);
            }
        });

        txfBPG.setFont(new java.awt.Font("Rockwell", 1, 14)); // NOI18N
        txfBPG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfBPGActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("=0");

        btnCPG.setFont(new java.awt.Font("Gill Sans MT", 1, 16)); // NOI18N
        btnCPG.setText("CALCULAR");
        btnCPG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCPGActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 15)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(204, 255, 255));
        jLabel9.setText("x=");

        lblXPG.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 14)); // NOI18N
        lblXPG.setForeground(new java.awt.Color(204, 255, 204));

        jLabel11.setFont(new java.awt.Font("Britannic Bold", 0, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 204, 204));
        jLabel11.setText("Ecuación de Segundo grado");

        jLabel12.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("x  +");

        txfBSG.setFont(new java.awt.Font("Rockwell", 1, 14)); // NOI18N
        txfBSG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfBSGActionPerformed(evt);
            }
        });

        txfCSG.setFont(new java.awt.Font("Rockwell", 1, 14)); // NOI18N
        txfCSG.setForeground(new java.awt.Color(0, 0, 0));
        txfCSG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfCSGActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("=0");

        btnCSG.setFont(new java.awt.Font("Gill Sans MT", 1, 16)); // NOI18N
        btnCSG.setText("CALCULAR");
        btnCSG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCSGActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 15)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(204, 255, 255));
        jLabel14.setText("x1=");

        lblX1SG.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 14)); // NOI18N
        lblX1SG.setForeground(new java.awt.Color(204, 255, 204));

        txfASG.setFont(new java.awt.Font("Rockwell", 1, 14)); // NOI18N
        txfASG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfASGActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("x ^2 +");

        jLabel17.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 15)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(204, 255, 255));
        jLabel17.setText("x2=");

        lblX2SG.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 14)); // NOI18N
        lblX2SG.setForeground(new java.awt.Color(204, 255, 204));

        lblEcPG.setFont(new java.awt.Font("Dubai", 0, 14)); // NOI18N
        lblEcPG.setForeground(new java.awt.Color(255, 255, 255));

        lblEcSG.setFont(new java.awt.Font("Dubai", 0, 14)); // NOI18N
        lblEcSG.setForeground(new java.awt.Color(255, 255, 255));

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout AlgebraLayout = new javax.swing.GroupLayout(Algebra);
        Algebra.setLayout(AlgebraLayout);
        AlgebraLayout.setHorizontalGroup(
            AlgebraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AlgebraLayout.createSequentialGroup()
                .addGroup(AlgebraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AlgebraLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(AlgebraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(AlgebraLayout.createSequentialGroup()
                                .addComponent(txfAPG, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txfBPG, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel8))
                            .addComponent(jLabel6)
                            .addGroup(AlgebraLayout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblXPG, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblEcPG, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(AlgebraLayout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(btnCPG)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(AlgebraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(AlgebraLayout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addGroup(AlgebraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addGroup(AlgebraLayout.createSequentialGroup()
                                        .addGroup(AlgebraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jLabel17)
                                            .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addGap(18, 18, 18)
                                        .addGroup(AlgebraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(lblX1SG, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(lblX2SG, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(AlgebraLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(AlgebraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblEcSG, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(AlgebraLayout.createSequentialGroup()
                                        .addGroup(AlgebraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(btnCSG)
                                            .addGroup(AlgebraLayout.createSequentialGroup()
                                                .addComponent(txfASG, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel16)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txfBSG, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel12)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txfCSG, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel13))))
                    .addGroup(AlgebraLayout.createSequentialGroup()
                        .addGap(206, 206, 206)
                        .addComponent(jLabel5)))
                .addContainerGap(57, Short.MAX_VALUE))
        );
        AlgebraLayout.setVerticalGroup(
            AlgebraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AlgebraLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AlgebraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AlgebraLayout.createSequentialGroup()
                        .addGroup(AlgebraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(30, 30, 30)
                        .addGroup(AlgebraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AlgebraLayout.createSequentialGroup()
                                .addGroup(AlgebraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(txfAPG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txfBPG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8))
                                .addGap(18, 18, 18)
                                .addComponent(btnCPG)
                                .addGap(19, 19, 19)
                                .addComponent(lblEcPG, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AlgebraLayout.createSequentialGroup()
                                .addGroup(AlgebraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel12)
                                    .addComponent(txfBSG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txfCSG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel16)
                                    .addComponent(txfASG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(btnCSG)
                                .addGap(18, 18, 18)
                                .addComponent(lblEcSG, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(3, 3, 3)
                        .addGroup(AlgebraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblX1SG, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(AlgebraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel14)
                                .addComponent(jLabel9)
                                .addComponent(lblXPG, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(AlgebraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel17)
                            .addComponent(lblX2SG, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(229, Short.MAX_VALUE))
                    .addComponent(jSeparator1)))
        );

        tpnOpciones.addTab("Álgebra", Algebra);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tpnOpciones, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tpnOpciones, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        tpnOpciones.getAccessibleContext().setAccessibleName("Opciones");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txfASGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfASGActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txfASGActionPerformed

    private void btnCSGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCSGActionPerformed
        
        try{
            float ax2=Float.parseFloat(txfASG.getText());
            if(ax2==(int)0){
                JOptionPane.showMessageDialog(null,"Se requiere que el término cuadrático sea diferente de 0");
            }else{
                float bx=Float.parseFloat(txfBSG.getText());
                float c=Float.parseFloat(txfCSG.getText());
                lblEcSG.setText(ax2+"x^2 + "+bx+"x "+c+" = 0");
                txfASG.setText("");
                txfBSG.setText("");
                txfCSG.setText("");
                if(ec.raizInt(ax2, bx, c)){
                    lblX1SG.setText(Float.toString(ec.ecCuadraticaP(ax2,bx,c)));
                    lblX2SG.setText(Float.toString(ec.ecCuadraticaN(ax2,bx,c)));
                }
            }
        }catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(null,"No se permite ingresar valores diferentes a números");
        }catch(NullPointerException nex){
            JOptionPane.showMessageDialog(null,"Por favor ingrese un valor para cada una de las casillas\ndel tipo de ecuación que quiera resolver");
        }
        
        
        
        
        
    }//GEN-LAST:event_btnCSGActionPerformed

    private void txfCSGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfCSGActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txfCSGActionPerformed

    //   tpnGeometria
    private void txfBSGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfBSGActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txfBSGActionPerformed

    private void btnCPGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCPGActionPerformed
        float ax=Float.parseFloat(txfAPG.getText());
        float b=Float.parseFloat(txfBPG.getText());
        lblEcPG.setText(ax+"x + "+b+" = 0");
        txfAPG.setText("");
        txfBPG.setText("");
        lblXPG.setText(Float.toString(ec.ecLineal(ax,b)));
    }//GEN-LAST:event_btnCPGActionPerformed

    private void txfBPGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfBPGActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txfBPGActionPerformed

    private void txfAPGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfAPGActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txfAPGActionPerformed

    private void txfD4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfD4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txfD4ActionPerformed
    /*
                    try{
                        if(Float.parseFloat(txfD1.getText())<0){
                            JOptionPane.showMessageDialog(null,"No se admiten valores negativos\nno existen distancias negativas");
                        }if(Float.parseFloat(txfD1.getText())==0){
                            JOptionPane.showMessageDialog(null,"No se admiten valores iguales a cero\nno existen cuerpos de espacio 0");
                        }else{
                    
                        }
                    }catch(NullPointerException ex){
                    JOptionPane.showMessageDialog(null,"Hiso falta un dato, por favor vuelva a intentarlo");
                    }catch(NumberFormatException nfx){
                        JOptionPane.showMessageDialog(null,"Ha dejado un campo vacío, por favor vuelva a intentarlo");
                    }   
    
    */
    private void btnCalcularAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalcularAActionPerformed
        String def="0";
        String figura= comboFiguras.getSelectedItem().toString();
        String tipo= comboCuerpo.getSelectedItem().toString();
        lblDU1.setVisible(false);
        lblDU2.setVisible(false);
        lblDU3.setVisible(false);
        switch(tipo){
            
            case"Esfera":
                try{
                        if(Float.parseFloat(txfD1.getText())<0){
                    JOptionPane.showMessageDialog(null,"No se admiten valores negativos\nno existen distancias negativas");
                }else if(Float.parseFloat(txfD1.getText())==0){
                    JOptionPane.showMessageDialog(null,"No se admiten valores iguales a cero\nno existen cuerpos de espacio 0");
                }else{
                    figural.sFigP(Float.parseFloat(txfD1.getText()), 0, 0,0, 0,figura,tipo);
                    lblDU1.setVisible(true);
                    lblDU1.setText("Radio:");
                    lblDI1.setVisible(true);
                    lblDI1.setText(txfD1.getText()+"u");
                    lblDU2.setText("Circunferencia:");
                    lblDU2.setVisible(true);
                    lblDI2.setVisible(true);
                    lblDI2.setText(figural.getP()+"u");
                    lblArea.setText(figural.getV()+" u^2");
                    lblPer.setText(figural.getAC()+"u^3");
                    lblDU4.setVisible(false);
                    lblDI4.setVisible(false);
                    lblR1.setText("Área:");
                    lblR2.setText("Volúmen");
                }
                }catch(NullPointerException ex){
                    JOptionPane.showMessageDialog(null,"Hiso falta un dato, por favor vuelva a intentarlo");
                }catch(NumberFormatException nfx){
                    JOptionPane.showMessageDialog(null,"Ha dejado un campo vacío, por favor vuelva a intentarlo");
                }
            break;

            case"Plano":
            switch(figura){
                case"Círculo":
                    try{
                        if(Float.parseFloat(txfD1.getText())<0){
                            JOptionPane.showMessageDialog(null,"No se admiten valores negativos\nno existen distancias negativas");
                        }else if(Float.parseFloat(txfD1.getText())==0){
                    JOptionPane.showMessageDialog(null,"No se admiten valores iguales a cero\nno existen figuras de espacio 0");
                    }else{
                            figural.sFigP(Float.parseFloat(txfD1.getText()), 0, 0, 0,figura);
                        lblDU1.setVisible(true);
                        lblDU1.setText("Radio:");
                        lblDI1.setVisible(true);
                        lblDI1.setText(txfD1.getText()+"u");
                    }
                    }catch(NullPointerException ex){
                    JOptionPane.showMessageDialog(null,"Hiso falta un dato, por favor vuelva a intentarlo");
                    }catch(NumberFormatException nfx){
                        JOptionPane.showMessageDialog(null,"Ha dejado un campo vacío, por favor vuelva a intentarlo");
                    }
                
                break;
                case"Triángulo":
                    try{
                        if(Float.parseFloat(txfD1.getText())<0){
                            JOptionPane.showMessageDialog(null,"No se admiten valores negativos\nno existen distancias negativas");
                        }if(Float.parseFloat(txfD1.getText())==0){
                            JOptionPane.showMessageDialog(null,"No se admiten valores iguales a cero\nno existen figuras de espacio 0");
                        }else{
                            figural.sFigP(Float.parseFloat(txfD1.getText()),0,Float.parseFloat(txfD2.getText()),0,figura);
                            lblDU1.setVisible(true);
                            lblDU1.setText("Base:");
                            lblDI1.setVisible(true);
                            lblDI1.setText(txfD1.getText()+"u");
                            lblDU2.setVisible(true);
                            lblDU2.setText("Altura:");
                            lblDI2.setVisible(true);
                            lblDI2.setText(txfD2.getText()+"u");
                        }
                    }catch(NullPointerException ex){
                    JOptionPane.showMessageDialog(null,"Hiso falta un dato, por favor vuelva a intentarlo");
                    }catch(NumberFormatException nfx){
                        JOptionPane.showMessageDialog(null,"Ha dejado un campo vacío, por favor vuelva a intentarlo");
                    }
                    
                break;
                case"Cuadrado":
                    
                    try{
                        if(Float.parseFloat(txfD1.getText())<0){
                            JOptionPane.showMessageDialog(null,"No se admiten valores negativos\nno existen distancias negativas");
                        }if(Float.parseFloat(txfD1.getText())==0){
                            JOptionPane.showMessageDialog(null,"No se admiten valores iguales a cero\nno existen cuerpos de espacio 0");
                        }else{
                            figural.sFigP(Float.parseFloat(txfD1.getText()), 0, 0, 0,figura);
                            lblDU1.setVisible(true);
                            lblDU1.setText("Lado:");
                            lblDI1.setVisible(true);
                            lblDI1.setText(txfD1.getText()+"u");
                        }
                    }catch(NullPointerException ex){
                    JOptionPane.showMessageDialog(null,"Hiso falta un dato, por favor vuelva a intentarlo");
                    }catch(NumberFormatException nfx){
                        JOptionPane.showMessageDialog(null,"Ha dejado un campo vacío, por favor vuelva a intentarlo");
                    }
                
                break;
                case"Rectángulo":
                    try{
                        if(Float.parseFloat(txfD1.getText())<0 || Float.parseFloat(txfD2.getText())<0){
                            JOptionPane.showMessageDialog(null,"No se admiten valores negativos\nno existen distancias negativas");
                        }if(Float.parseFloat(txfD1.getText())==0 || Float.parseFloat(txfD2.getText())==0){
                            JOptionPane.showMessageDialog(null,"No se admiten valores iguales a cero\nno existen cuerpos de espacio 0");
                        }else{
                            figural.sFigP(Float.parseFloat(txfD1.getText()),0,Float.parseFloat(txfD2.getText()),0,figura);
                            lblDU1.setVisible(true);
                            lblDU1.setText("Largo:");
                            lblDI1.setVisible(true);
                            lblDI1.setText(txfD1.getText()+"u");
                            lblDU2.setVisible(true);
                            lblDU2.setText("Ancho:");
                            lblDI2.setVisible(true);
                            lblDI2.setText(txfD2.getText()+"u");
                        }
                    }catch(NullPointerException ex){
                    JOptionPane.showMessageDialog(null,"Hiso falta un dato, por favor vuelva a intentarlo");
                    }catch(NumberFormatException nfx){
                        JOptionPane.showMessageDialog(null,"Ha dejado un campo vacío, por favor vuelva a intentarlo");
                    }
                    
                break;
                case"Polígono":
                    try{
                        if(Float.parseFloat(txfD1.getText())<0||Float.parseFloat(txfD3.getText())<0){
                            JOptionPane.showMessageDialog(null,"No se admiten valores negativos\nno existen distancias negativas");
                        }if(Float.parseFloat(txfD1.getText())==0){
                            JOptionPane.showMessageDialog(null,"No se admiten valores iguales a cero\nno existen cuerpos de espacio 0");
                        }else{
                            figural.sFigP(Float.parseFloat(txfD1.getText()),0,0,Integer.parseInt(txfD3.getText()),figura);
                            lblDU1.setVisible(true);
                            lblDU1.setText("Lado:");
                            lblDI1.setVisible(true);
                            lblDI1.setText(txfD1.getText()+"u");
                            lblDU2.setVisible(true);
                            lblDU2.setText("Apotema:");
                            lblDI2.setVisible(true);
                            lblDI2.setText(figural.getApotema()+"u");
                            lblDU3.setVisible(true);
                            lblDU3.setText("Lados:");
                            lblDI3.setVisible(true);
                            lblDI3.setText(txfD3.getText()+" lados");
                        }
                    }catch(NullPointerException ex){
                    JOptionPane.showMessageDialog(null,"Hiso falta un dato, por favor vuelva a intentarlo");
                    }catch(NumberFormatException nfx){
                        JOptionPane.showMessageDialog(null,"Ha dejado un campo vacío, por favor vuelva a intentarlo");
                    }

                break;
            }
            lblR1.setText("Perímetro:");
            lblR2.setText("Área:");
            lblPer.setText(figural.getP()+" u");
            lblArea.setText(figural.getA()+" u^2");
            break;
            //aqui inicia lo de los prismas   (Ese break que troll);

            case "Prisma":
            switch(figura){
                
                case"Círculo":
                    try{
                        if(Float.parseFloat(txfD1.getText())<0||Float.parseFloat(txfD4.getText())<0){
                            JOptionPane.showMessageDialog(null,"No se admiten valores negativos\nno existen distancias negativas");
                        }if(Float.parseFloat(txfD1.getText())==0||Float.parseFloat(txfD4.getText())==0){
                            JOptionPane.showMessageDialog(null,"No se admiten valores iguales a cero\nno existen cuerpos de espacio 0");
                        }else{
                            figural.sFigP(Float.parseFloat(txfD1.getText()), 0, 0,Float.parseFloat(txfD4.getText()), 0,figura,tipo);
                            lblDU1.setVisible(true);
                            lblDU1.setText("Radio:");
                            lblDI1.setVisible(true);
                            lblDI1.setText(txfD1.getText()+"u");
                        }
                    }catch(NullPointerException ex){
                    JOptionPane.showMessageDialog(null,"Hiso falta un dato, por favor vuelva a intentarlo");
                    }catch(NumberFormatException nfx){
                        JOptionPane.showMessageDialog(null,"Ha dejado un campo vacío, por favor vuelva a intentarlo");
                    } 
                break;
                
                case"Triángulo":
                    try{
                        if(Float.parseFloat(txfD1.getText())<0||Float.parseFloat(txfD2.getText())<0||Float.parseFloat(txfD4.getText())<0){
                            JOptionPane.showMessageDialog(null,"No se admiten valores negativos\nno existen distancias negativas");
                        }if(Float.parseFloat(txfD1.getText())==0||Float.parseFloat(txfD2.getText())==0||Float.parseFloat(txfD4.getText())==0){
                            JOptionPane.showMessageDialog(null,"No se admiten valores iguales a cero\nno existen cuerpos de espacio 0");
                        }else{
                            figural.sFigP(Float.parseFloat(txfD1.getText()),0,Float.parseFloat(txfD2.getText()),Float.parseFloat(txfD4.getText()),0,figura,tipo);
                        lblDU1.setVisible(true);
                        lblDU1.setText("Base:");
                        lblDI1.setVisible(true);

                        lblDU2.setVisible(true);
                        lblDU2.setText("Altura:");
                        lblDI2.setVisible(true);
                        lblDI1.setText(txfD1.getText()+"u");
                        lblDI2.setText(txfD2.getText()+"u");
                        }
                    }catch(NullPointerException ex){
                    JOptionPane.showMessageDialog(null,"Hiso falta un dato, por favor vuelva a intentarlo");
                    }catch(NumberFormatException nfx){
                        JOptionPane.showMessageDialog(null,"Ha dejado un campo vacío, por favor vuelva a intentarlo");
                    } 
                    
                
                break;
                
                case"Cuadrado":
                    try{
                        if(Float.parseFloat(txfD1.getText())<0||Float.parseFloat(txfD4.getText())<0){
                            JOptionPane.showMessageDialog(null,"No se admiten valores negativos\nno existen distancias negativas");
                        }if(Float.parseFloat(txfD1.getText())==0||Float.parseFloat(txfD4.getText())==0){
                            JOptionPane.showMessageDialog(null,"No se admiten valores iguales a cero\nno existen cuerpos de espacio 0");
                        }else{
                            
                            figural.sFigP(Float.parseFloat(txfD1.getText()), 0, 0,Float.parseFloat(txfD4.getText()), 0,figura,tipo);
                            lblDU1.setText("Lado:");
                            lblDU1.setVisible(true);
                            lblDI1.setVisible(true);
                            lblDI1.setText(txfD1.getText()+"u");
                        }
                    }catch(NullPointerException ex){
                    JOptionPane.showMessageDialog(null,"Hiso falta un dato, por favor vuelva a intentarlo");
                    }catch(NumberFormatException nfx){
                        JOptionPane.showMessageDialog(null,"Ha dejado un campo vacío, por favor vuelva a intentarlo");
                    } 
                    
                
                break;
                
                case"Rectángulo":
                    try{
                        if(Float.parseFloat(txfD1.getText())<0||Float.parseFloat(txfD2.getText())<0||Float.parseFloat(txfD4.getText())<0){
                            JOptionPane.showMessageDialog(null,"No se admiten valores negativos\nno existen distancias negativas");
                        }if(Float.parseFloat(txfD1.getText())==0||Float.parseFloat(txfD2.getText())==0||Float.parseFloat(txfD4.getText())==0){
                            JOptionPane.showMessageDialog(null,"No se admiten valores iguales a cero\nno existen cuerpos de espacio 0");
                        }else{
                            figural.sFigP(Float.parseFloat(txfD1.getText()),0,Float.parseFloat(txfD2.getText()),Float.parseFloat(txfD4.getText()),0,figura,tipo);
                            lblDU1.setVisible(true);
                            lblDU1.setText("Largo:");
                            lblDI1.setVisible(true);
                            lblDI1.setText(txfD1.getText()+"u");
                            lblDU2.setVisible(true);
                            lblDU2.setText("Ancho:");
                            lblDI2.setVisible(true);
                            lblDI2.setText(txfD2.getText()+"u");
                        }
                    }catch(NullPointerException ex){
                    JOptionPane.showMessageDialog(null,"Hiso falta un dato, por favor vuelva a intentarlo");
                    }catch(NumberFormatException nfx){
                        JOptionPane.showMessageDialog(null,"Ha dejado un campo vacío, por favor vuelva a intentarlo");
                    } 
                
                break;
                
                case"Polígono":
                    try{
                        if(Float.parseFloat(txfD1.getText())<0||Float.parseFloat(txfD3.getText())<0||Float.parseFloat(txfD4.getText())<0){
                            JOptionPane.showMessageDialog(null,"No se admiten valores negativos\nno existen distancias negativas");
                        }if(Float.parseFloat(txfD1.getText())==0||Float.parseFloat(txfD3.getText())==0||Float.parseFloat(txfD4.getText())==0){
                            JOptionPane.showMessageDialog(null,"No se admiten valores iguales a cero\nno existen cuerpos de espacio 0");
                        }else{
                            figural.sFigP(Float.parseFloat(txfD1.getText()),0,0,Float.parseFloat(txfD4.getText()),Integer.parseInt(txfD3.getText()),figura,tipo);
                            lblDU1.setVisible(true);
                            lblDU2.setVisible(true);
                            lblDU3.setVisible(true);
                            lblDU4.setVisible(true);
                            lblDI1.setText(txfD1.getText()+" u");
                            lblDI2.setText(figural.getApotema()+" u");
                            lblDI3.setText(txfD3.getText()+" lados");
                            lblDI4.setText(txfD4.getText()+" u");
                        }
                    }catch(NullPointerException ex){
                    JOptionPane.showMessageDialog(null,"Hiso falta un dato, por favor vuelva a intentarlo");
                    }catch(NumberFormatException nfx){
                        JOptionPane.showMessageDialog(null,"Ha dejado un campo vacío, por favor vuelva a intentarlo");
                    } 
                
                break;
            }
            lblDI4.setText(txfD4.getText()+" u");
            lblR1.setText("Área:");
            lblR2.setVisible(true);
            lblR2.setText("Volúmen:");
            lblPer.setText(figural.getAC()+"u^2");
            lblArea.setVisible(true);
            lblArea.setText(figural.getV()+"u^3");
            break;
            //aqui debería arrancar lo de pirámide, pero como solo cambia el tipo mejor hago ajustes en el metodo
            case  "Pirámide":
            switch(figura){
                case"Círculo":
                    try{
                        if(Float.parseFloat(txfD1.getText())<0||Float.parseFloat(txfD4.getText())<0){
                            JOptionPane.showMessageDialog(null,"No se admiten valores negativos\nno existen distancias negativas");
                        }if(Float.parseFloat(txfD1.getText())==0||Float.parseFloat(txfD4.getText())==0){
                            JOptionPane.showMessageDialog(null,"No se admiten valores iguales a cero\nno existen cuerpos de espacio 0");
                        }else{
                            figural.sFigP(Float.parseFloat(txfD1.getText()), 0, 0,Float.parseFloat(txfD4.getText()), 0,figura,tipo);
                            lblDU1.setVisible(true);
                            lblDI1.setText(txfD1.getText()+"u");
                        }
                    }catch(NullPointerException ex){
                    JOptionPane.showMessageDialog(null,"Hiso falta un dato, por favor vuelva a intentarlo");
                    }catch(NumberFormatException nfx){
                        JOptionPane.showMessageDialog(null,"Ha dejado un campo vacío, por favor vuelva a intentarlo");
                    } 
                
                break;
                
                case"Triángulo":
                    try{
                        if(Float.parseFloat(txfD1.getText())<0||Float.parseFloat(txfD2.getText())<0||Float.parseFloat(txfD4.getText())<0){
                            JOptionPane.showMessageDialog(null,"No se admiten valores negativos\nno existen distancias negativas");
                        }if(Float.parseFloat(txfD1.getText())==0||Float.parseFloat(txfD2.getText())==0||Float.parseFloat(txfD4.getText())==0){
                            JOptionPane.showMessageDialog(null,"No se admiten valores iguales a cero\nno existen cuerpos de espacio 0");
                        }else{
                            figural.sFigP(Float.parseFloat(txfD1.getText()),0,Float.parseFloat(txfD2.getText()),Float.parseFloat(txfD4.getText()),0,figura,tipo);
                             lblDU1.setVisible(true);
                            lblDU1.setText("Base:");
                            lblDI1.setVisible(true);

                            lblDU2.setVisible(true);
                            lblDU2.setText("Altura:");
                            lblDI2.setVisible(true);
                            lblDI1.setText(txfD1.getText()+"u");
                            lblDI2.setText(txfD2.getText()+"u");
                            
                        }
                    }catch(NullPointerException ex){
                    JOptionPane.showMessageDialog(null,"Hiso falta un dato, por favor vuelva a intentarlo");
                    }catch(NumberFormatException nfx){
                        JOptionPane.showMessageDialog(null,"Ha dejado un campo vacío, por favor vuelva a intentarlo");
                    } 
                
                break;
                
                case"Cuadrado":
                    try{
                        if(Float.parseFloat(txfD1.getText())<0||Float.parseFloat(txfD4.getText())<0){
                            JOptionPane.showMessageDialog(null,"No se admiten valores negativos\nno existen distancias negativas");
                        }if(Float.parseFloat(txfD1.getText())==0||Float.parseFloat(txfD4.getText())==0){
                            JOptionPane.showMessageDialog(null,"No se admiten valores iguales a cero\nno existen cuerpos de espacio 0");
                        }else{
                            figural.sFigP(Float.parseFloat(txfD1.getText()), 0, 0,Float.parseFloat(txfD4.getText()), 0,figura,tipo);
                            
                            lblDU1.setText("Lado:");
                            lblDU1.setVisible(true);
                            lblDI1.setVisible(true);
                            lblDI1.setText(txfD1.getText()+"u");
                        }
                    }catch(NullPointerException ex){
                    JOptionPane.showMessageDialog(null,"Hiso falta un dato, por favor vuelva a intentarlo");
                    }catch(NumberFormatException nfx){
                        JOptionPane.showMessageDialog(null,"Ha dejado un campo vacío, por favor vuelva a intentarlo");
                    } 
                
                break;
                
                case"Rectángulo":
                    try{
                        if(Float.parseFloat(txfD1.getText())<0||Float.parseFloat(txfD2.getText())<0||Float.parseFloat(txfD4.getText())<0){
                            JOptionPane.showMessageDialog(null,"No se admiten valores negativos\nno existen distancias negativas");
                        }if(Float.parseFloat(txfD1.getText())==0||Float.parseFloat(txfD2.getText())==0||Float.parseFloat(txfD4.getText())==0){
                            JOptionPane.showMessageDialog(null,"No se admiten valores iguales a cero\nno existen cuerpos de espacio 0");
                        }else{
                            figural.sFigP(Float.parseFloat(txfD1.getText()),0,Float.parseFloat(txfD2.getText()),Float.parseFloat(txfD4.getText()),0,figura,tipo);
                            lblDU1.setVisible(true);
                            lblDU1.setText("Largo:");
                            lblDI1.setVisible(true);
                            lblDI1.setText(txfD1.getText()+"u");
                            lblDU2.setVisible(true);
                            lblDU2.setText("Ancho:");
                            lblDI2.setVisible(true);
                            lblDI2.setText(txfD2.getText()+"u");
                        }
                    }catch(NullPointerException ex){
                    JOptionPane.showMessageDialog(null,"Hiso falta un dato, por favor vuelva a intentarlo");
                    }catch(NumberFormatException nfx){
                        JOptionPane.showMessageDialog(null,"Ha dejado un campo vacío, por favor vuelva a intentarlo");
                    } 
                
                break;
                
                case"Polígono":
                    try{
                        if(Float.parseFloat(txfD1.getText())<0||Float.parseFloat(txfD3.getText())<0||Float.parseFloat(txfD4.getText())<0){
                            JOptionPane.showMessageDialog(null,"No se admiten valores negativos\nno existen distancias negativas");
                        }if(Float.parseFloat(txfD1.getText())==0||Float.parseFloat(txfD3.getText())==0||Float.parseFloat(txfD4.getText())==0){
                            JOptionPane.showMessageDialog(null,"No se admiten valores iguales a cero\nno existen cuerpos de espacio 0");
                        }else{
                            figural.sFigP(Float.parseFloat(txfD1.getText()),0,0,Float.parseFloat(txfD4.getText()),Integer.parseInt(txfD3.getText()),figura,tipo);
                            lblDU1.setVisible(true);
                            lblDU2.setVisible(true);
                            lblDU3.setVisible(true);
                            lblDU4.setVisible(true);
                            lblDI1.setText(txfD1.getText()+" u");
                            lblDI2.setText(figural.getApotema()+" u");
                            lblDI3.setText(txfD3.getText()+" lados");
                            lblDI4.setText(txfD4.getText()+" u");
                        }
                    }catch(NullPointerException ex){
                    JOptionPane.showMessageDialog(null,"Hiso falta un dato, por favor vuelva a intentarlo");
                    }catch(NumberFormatException nfx){
                        JOptionPane.showMessageDialog(null,"Ha dejado un campo vacío, por favor vuelva a intentarlo");
                    } 
                
                break;
            }
            
            lblDI4.setText(txfD4.getText()+"u");
            lblR1.setText("Volumen:");
            lblR2.setVisible(false);
            lblArea.setVisible(false);
            lblPer.setText(figural.getV()+"u^3");

        }
        txfD1.setText("");
        txfD2.setText("");
        txfD3.setText("");
        txfD4.setText("");
    }//GEN-LAST:event_btnCalcularAActionPerformed

    private void txfD2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfD2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txfD2ActionPerformed

    private void txfD3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfD3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txfD3ActionPerformed

    private void txfD1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfD1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txfD1ActionPerformed

    private void comboCuerpoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboCuerpoActionPerformed

        
        reinicioRes();
        String figura= comboFiguras.getSelectedItem().toString();
        String tipo= comboCuerpo.getSelectedItem().toString();
        acomodoVentana(figura,tipo);
        defImagen(figura,tipo);
    }//GEN-LAST:event_comboCuerpoActionPerformed

    private void comboFigurasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboFigurasActionPerformed
        
        reinicioRes();
        String figura= comboFiguras.getSelectedItem().toString();
        String tipo= comboCuerpo.getSelectedItem().toString();
        acomodoVentana(figura,tipo);
       defImagen(figura,tipo);
    }//GEN-LAST:event_comboFigurasActionPerformed
    public void reinicioRes(){
        txfD1.setText("");
        txfD2.setText("");
        txfD3.setText("");
        txfD4.setText("");
        lblPer.setText("");
        lblArea.setText("");
        lblDI1.setText("");
        lblDI2.setText("");
        lblDI3.setText("");
        lblDI4.setText("");
    }
    public void defImagen(String figura,String tipo){
        
        String icono="";
        switch(tipo){
            case"Plano":
                switch(figura){
                    case"Círculo":
                        icono="D:\\Tecno\\4to semestre\\prog\\unidad 2\\PracticaF\\imagenes\\nbg\\circulo.png";
                        break;
                    case"Triángulo":
                        icono="D:\\Tecno\\4to semestre\\prog\\unidad 2\\PracticaF\\imagenes\\nbg\\triangulo.png";
                        break;
                    case"Cuadrado":
                        icono="D:\\Tecno\\4to semestre\\prog\\unidad 2\\PracticaF\\imagenes\\nbg\\cuadrado.png";
                        break;
                    case"Rectángulo":
                        icono="D:\\Tecno\\4to semestre\\prog\\unidad 2\\PracticaF\\imagenes\\nbg\\rectangulo.png";
                        break;
                    case"Polígono":
                        icono="D:\\Tecno\\4to semestre\\prog\\unidad 2\\PracticaF\\imagenes\\nbg\\poligono.png";
                        break;
                }
                break;
            case"Prisma":
                switch(figura){
                    case"Círculo":
                        icono="D:\\Tecno\\4to semestre\\prog\\unidad 2\\PracticaF\\imagenes\\nbg\\PrisCirc.png";
                        break;
                    case"Triángulo":
                        icono="D:\\Tecno\\4to semestre\\prog\\unidad 2\\PracticaF\\imagenes\\nbg\\PrisTriag.png";
                        break;
                    case"Cuadrado":
                        icono="D:\\Tecno\\4to semestre\\prog\\unidad 2\\PracticaF\\imagenes\\nbg\\PrisCuad.png";
                        break;
                    case"Rectángulo":
                        icono="D:\\Tecno\\4to semestre\\prog\\unidad 2\\PracticaF\\imagenes\\nbg\\PrisRec.png";
                        break;
                    case"Polígono":
                        icono="D:\\Tecno\\4to semestre\\prog\\unidad 2\\PracticaF\\imagenes\\nbg\\PrisHex.png";
                        break;
                }
                break;
            case"Pirámide":
                switch(figura){
                    case"Círculo":
                        icono="D:\\Tecno\\4to semestre\\prog\\unidad 2\\PracticaF\\imagenes\\nbg\\PiraCirc.png";
                        break;
                    case"Triángulo":
                        icono="D:\\Tecno\\4to semestre\\prog\\unidad 2\\PracticaF\\imagenes\\nbg\\PiraTriag.png";
                        break;
                    case"Cuadrado":
                        icono="D:\\Tecno\\4to semestre\\prog\\unidad 2\\PracticaF\\imagenes\\nbg\\PiraCuad.png";
                        break;
                    case"Rectángulo":
                        icono="D:\\Tecno\\4to semestre\\prog\\unidad 2\\PracticaF\\imagenes\\nbg\\PiraRec.png";
                        break;
                    case"Polígono":
                        icono="D:\\Tecno\\4to semestre\\prog\\unidad 2\\PracticaF\\imagenes\\nbg\\PiraHex.png";
                        break;
                }
                break;
            case"Esfera":
                icono="D:\\Tecno\\4to semestre\\prog\\unidad 2\\PracticaF\\imagenes\\nbg\\esfera.png";
                break;
        }
       imagen= new ImageIcon(icono);
        lblImagen.setIcon(new ImageIcon(icono));
    }
    public void acomodoVentana(String figura, String tipo){
        
        
        
        switch(figura){
            case"Triángulo":
                lblDU1.setVisible(true);
                lblDU1.setText("Base:");
                lblDI1.setVisible(true);
                lblDU2.setVisible(true);
                lblDU2.setText("Altura:");
                lblDI2.setVisible(true);
                lblD1.setVisible(true);
                lblD1.setText("Base:");
                lblD2.setVisible(true);
                lblD2.setText("Altura:");
                txfD2.setVisible(true);

                lblD3.setVisible(false);
                
                lblR1.setText("Perímetro:");

                txfD3.setVisible(false);
                break;
            case"Círculo":
                lblDU1.setVisible(true);
                lblDU1.setText("Radio:");
                lblDI1.setVisible(true);
                lblD1.setVisible(true);
                lblD1.setText("Radio:");
                lblD2.setVisible(false);
                lblD3.setVisible(false);
                
                lblR1.setText("Circunferencia:");

                txfD2.setVisible(false);
                txfD3.setVisible(false);
                lblDU2.setVisible(false);
                lblDU3.setVisible(false);
                lblDI2.setVisible(false);
                lblDI3.setVisible(false);
                break;
            case"Cuadrado":
                lblDU1.setVisible(true);
                lblDU1.setText("Lado:");
                lblDI1.setVisible(true);
                lblD1.setVisible(true);
                lblD1.setText("Lado:");
                lblD2.setVisible(false);
                lblD3.setVisible(false);
                
                lblR1.setText("Perímetro:");

                txfD2.setVisible(false);
                txfD3.setVisible(false);
                break;
            case"Rectángulo":
                lblDU1.setVisible(true);
                lblDU1.setText("Largo:");
                lblDI1.setVisible(true);
                lblDU2.setVisible(true);
                lblDU2.setText("Ancho:");
                lblDI2.setVisible(true);;
                lblD1.setVisible(true);
                lblD1.setText("Largo:");
                lblD2.setVisible(true);
                lblD2.setText("Ancho:");
                txfD2.setVisible(true);

                lblD3.setVisible(false);
                
                lblR1.setText("Perímetro:");

                txfD3.setVisible(false);
                break;
            case"Polígono":
                     lblDU1.setVisible(true);
                lblDU1.setText("Lado:");
                lblDI1.setVisible(true);
            
                lblDU2.setVisible(true);
                lblDU2.setText("Apotema:");
                lblDI2.setVisible(true);
            
                lblDU3.setVisible(true);
                lblDU3.setText("Lados:");
                lblDI3.setVisible(true);
            
                
                
                lblDU1.setText("Lado:");
                lblD1.setVisible(true);
                lblD1.setText("Lado:");
                lblD2.setVisible(false);
                lblD3.setVisible(true);
                lblD3.setText("Lados:");
                txfD3.setVisible(true);
                
                lblR1.setText("Perímetro:");

                txfD2.setVisible(false);
                break;    
        }
        
        switch(tipo){
            case"Plano":
            lblD1.setVisible(true);
            txfD1.setVisible(true);
            lblDU4.setVisible(false);
            lblDI4.setVisible(false);
            lblD4.setVisible(false);
            txfD4.setVisible(false);
            lblDU4.setVisible(false);
            lblDI4.setVisible(false);
            comboFiguras.setVisible(true);
            break;
            case"Prisma":
            lblDU1.setVisible(true);
            lblDU2.setVisible(true);
            lblD1.setVisible(true);
            txfD1.setVisible(true);
            lblDU4.setText("Altura(H):");
            lblDU4.setVisible(true);
            lblDI4.setVisible(true);
            lblD4.setVisible(true);
            lblD4.setText("Altura(H):");
            txfD4.setVisible(true);
            comboFiguras.setVisible(true);
            break;
            case "Pirámide":
                lblD1.setVisible(true);
                txfD1.setVisible(true);
                lblDU4.setText("Altura(H):");
                lblDU4.setVisible(true);
                lblDI4.setVisible(true);
                lblD4.setVisible(true);
                lblD4.setText("Altura(H):");
                txfD4.setVisible(true);
                comboFiguras.setVisible(true);
                break;
            case"Esfera":
                lblR1.setText("Circunferencia");
            lblD2.setVisible(false);
            txfD2.setVisible(false);
            lblD3.setVisible(false);
            txfD3.setVisible(false);
            lblD4.setVisible(false);
            txfD4.setVisible(false);
            
            lblDU4.setVisible(true);
            lblDI4.setVisible(true);
            lblD4.setVisible(false);
            txfD4.setVisible(false);
            
            lblD1.setText("Radio");
            comboFiguras.setVisible(false);
            break;
        }
        
        
    
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentOp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentOp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentOp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentOp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentOp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Algebra;
    private javax.swing.JPanel Geometria;
    private javax.swing.JButton btnCPG;
    private javax.swing.JButton btnCSG;
    private javax.swing.JButton btnCalcularA;
    private javax.swing.JComboBox<String> comboCuerpo;
    private javax.swing.JComboBox<String> comboFiguras;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblArea;
    private javax.swing.JLabel lblD1;
    private javax.swing.JLabel lblD2;
    private javax.swing.JLabel lblD3;
    private javax.swing.JLabel lblD4;
    private javax.swing.JLabel lblDI1;
    private javax.swing.JLabel lblDI2;
    private javax.swing.JLabel lblDI3;
    private javax.swing.JLabel lblDI4;
    private javax.swing.JLabel lblDU1;
    private javax.swing.JLabel lblDU2;
    private javax.swing.JLabel lblDU3;
    private javax.swing.JLabel lblDU4;
    private javax.swing.JLabel lblEcPG;
    private javax.swing.JLabel lblEcSG;
    private javax.swing.JLabel lblImagen;
    private javax.swing.JLabel lblPer;
    private javax.swing.JLabel lblR1;
    private javax.swing.JLabel lblR2;
    private javax.swing.JLabel lblX1SG;
    private javax.swing.JLabel lblX2SG;
    private javax.swing.JLabel lblXPG;
    private javax.swing.JTabbedPane tpnOpciones;
    private javax.swing.JTextField txfAPG;
    private javax.swing.JTextField txfASG;
    private javax.swing.JTextField txfBPG;
    private javax.swing.JTextField txfBSG;
    private javax.swing.JTextField txfCSG;
    private javax.swing.JTextField txfD1;
    private javax.swing.JTextField txfD2;
    private javax.swing.JTextField txfD3;
    private javax.swing.JTextField txfD4;
    // End of variables declaration//GEN-END:variables
}
